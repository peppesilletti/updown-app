steps:
  - id: "docker-build"
    name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "${_IMAGE_NAME}", "server/sql-proxy/."]

  - id: "docker-push"
    name: "gcr.io/cloud-builders/docker"
    args: ["push", "${_IMAGE_NAME}"]

  - id: "docker-layer"
    name: "gcr.io/cloud-builders/docker"
    entrypoint: /bin/bash
    args:
      - "-c"
      - |
        echo "FROM $_IMAGE_NAME
        COPY --from=gcr.io/cloud-sql-connectors/cloud-sql-proxy /cloud-sql-proxy /cloudsql/cloud-sql-proxy" > Dockerfile-proxy;

        docker build -f Dockerfile-proxy -t ${_IMAGE_NAME}-proxy .

  # For TCP connections
  - id: "migrate-tcp"
    name: "${_IMAGE_NAME}-proxy"
    dir: "server"
    entrypoint: /bin/bash
    args:
      - "-c"
      - |
        /cloudsql/cloud-sql-proxy --port ${_DATABASE_PORT} ${_INSTANCE_CONNECTION_NAME} & sleep 2;
        npm i -D postgrator-cli;
        npx postgrator \
          --to max \
          --driver pg \
          --host 127.0.0.1 \
          --port ${_DATABASE_PORT} \
          --password ${_DATABASE_PASSWORD} \
          --database ${_DATABASE_NAME} \
          --username ${_DATABASE_USER} \
          --migration-pattern "migrations/*";

options:
  dynamic_substitutions: true
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _DATABASE_USER: postgres
  _DATABASE_NAME: postgres
  _INSTANCE_CONNECTION_NAME: ${PROJECT_ID}:europe-west3:updown-db
  _DATABASE_PORT: "5432"
  _IMAGE_NAME: gcr.io/${PROJECT_ID}/cloud-sql-proxy
